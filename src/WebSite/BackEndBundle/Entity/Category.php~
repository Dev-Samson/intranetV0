<?php

namespace WebSite\BackEndBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Category
 *
 * @ORM\Table("WebSite_Category")
 * @ORM\Entity(repositoryClass="WebSite\BackEndBundle\Entity\CategoryRepository")
 */
class Category
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=200,unique=true)
     */
    private $name;

    /**
     * @var integer
     *
     * @ORM\Column(name="numOrder", type="integer")
     */
    private $numOrder;
    
    /**
     * @var string
     *
     * @ORM\Column(name="description", type="string", length=100000)
     */
    private $description;
    


    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Category
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set numOrder
     *
     * @param integer $numOrder
     *
     * @return Category
     */
    public function setNumOrder($numOrder)
    {
        $this->numOrder = $numOrder;

        return $this;
    }

    /**
     * Get numOrder
     *
     * @return integer
     */
    public function getNumOrder()
    {
        return $this->numOrder;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->articles = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add article
     *
     * @param \WebSite\BackEndBundle\Entity\Article $article
     *
     * @return Category
     */
    public function addArticle(\WebSite\BackEndBundle\Entity\Article $article)
    {
        $this->articles[] = $article;

        return $this;
    }

    /**
     * Remove article
     *
     * @param \WebSite\BackEndBundle\Entity\Article $article
     */
    public function removeArticle(\WebSite\BackEndBundle\Entity\Article $article)
    {
        $this->articles->removeElement($article);
    }

    /**
     * Get articles
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getArticles()
    {
        return $this->articles;
    }
    
    public function __toString() {
        return $this->name;
    }
    
    
    /**
     * Set description
     *
     * @param string $description
     *
     * @return Article
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    

    /**
     * Get description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }
    
    public function getDescriptionStriptags()
    {
        return html_entity_decode(strip_tags($this->description));
    }
}
