<?php

namespace Intranet\CalendarBundle\Entity;

/**
 * VacationRequestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VacationPeriodRepository extends \Doctrine\ORM\EntityRepository
{
     /**
     * Find conge events of a user
     * @param type $user
     * @return type
     */
    public function findFromUser($user)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('v')
            ->from('Intranet\CalendarBundle\Entity\VacationPeriod', 'v')
            ->join("v.user", "u")
            ->where('u.id = :user')
                ->setParameter('user', $user->getId());
        
      
        return $qb;
    }
    
    /**
     * Find vacation period to a user by month and year
     * @param type $user
     * @param type $month
     * @param type $year
     * @return type
     */
    public function findVacationPeriod($user,$date)
    {
        $year= intval($date->format('Y'));
        $month= intval($date->format('m'));
        if($month<6){
            $year-=1;
        }
        $year1= $year+1;
        $uid=$user->getId();
        
        $qb = $this->_em->createQueryBuilder();
        $qb->select('v')
            ->from('Intranet\CalendarBundle\Entity\VacationPeriod', 'v')
            ->join("v.user", "u")
//            ->add('where', $qb->expr()->orX(
//                    $qb->expr()->andX(
//                        $qb->expr()->eq('YEAR(v.start )', $year),
//                        $qb->expr()->lte('MONTH(v.start )', $month),
//                        $qb->expr()->eq('u.id', $uid)
//                    ),
//                    $qb->expr()->andX(
//                        $qb->expr()->eq('YEAR(v.start )', $year1),
//                        $qb->expr()->gt('MONTH(v.start )', $month),
//                        $qb->expr()->eq('u.id', $uid)
//                    )
//            ))
            ->where('u.id = :user')
            ->andWhere('YEAR(v.start ) = :year')
                ->setParameter('user', $uid)
                ->setParameter('year', $year)
                ;
                
        
//        return $qb->getQuery();
//        return $qb->getQuery()->getSql();
        return $qb->getQuery()->getOneOrNullResult();
    }
    
}
