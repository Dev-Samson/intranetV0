<?php

namespace Application\UserBundle\Entity;

/**
 * SkillTagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Find all candidats
     * @return type
     */
    public function findAllCandidates()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('Application\UserBundle\Entity\User', 'u')
            ->where('u.roles LIKE :roles')
            ->andWhere('u.accept = :accept')
            //->orderBy('created_at','DESC')
            ->setParameter('roles', '%"ROLE_CANDIDAT"%')
            ->setParameter('accept', true);
        return $qb->getQuery()->getResult();
    }
    
    /**
     * Find all candidats wait appointement
     * @return type
     */
    public function findAllCandidatWaitAppointment()
    {
        $allCandidats = $this->findAllCandidates();
        $waits =array();
        foreach($allCandidats as $candidat)
        {
            if(count($candidat->getAppointments())==0)
                $waits[]=$candidat;
        }
        
        return $waits;
    }
    
    /**
     * Find all salaried
     * @return type
     */
    public function findSalaried()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('Application\UserBundle\Entity\User', 'u')
            ->where('u.roles LIKE :roles')
            ->setParameter('roles', '%"ROLE_SALARIE"%');
        return $qb->getQuery()->getResult();
    }
    /**
     * Find all salaried
     * @return type
     */
    public function findAllMembers()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('Application\UserBundle\Entity\User', 'u')
            ->where('u.archive = 0');
        return $qb->getQuery()->getResult();
    }
   
    
    /**
     * Find all Managers
     * @return type
     */
    public function findManagers()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('Application\UserBundle\Entity\User', 'u')
            ->where('u.roles LIKE :roles')
            ->setParameter('roles', '%"ROLE_MANAGER"%');
        return $qb;
    }
    /**
     * Find all Managers
     * @return type
     */
    public function findAllOrder()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('Application\UserBundle\Entity\User', 'u')
            ->orderBy('u.lastname')
            ->addOrderBy('u.firstname', 'ASC');
        return $qb;
    }
    
     public function orderByFirstname(){
        $qb = $this->_em->createQueryBuilder();
        $qb->select('e')
            ->from('Application\UserBundle\Entity\User', 'e')
            ->orderBy('e.firstname', 'ASC')
            ;
        return $qb;
    }
   
    
    public function getSearch($search)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('Application\UserBundle\Entity\User', 'u')
            ->where('u.username LIKE :search')
            ->orWhere('u.email LIKE :search')
            ->orWhere('u.firstname LIKE :search')
            ->orWhere('u.lastname LIKE :search')
            ->andwhere('u.roles LIKE :roles')
            ->orwhere('u.roles LIKE :roleAdmin')
            ->setParameter('roles', '%"ROLE_SALARIE"%')
            ->setParameter('roleAdmin', '%"ROLE_SUPER_ADMIN"%')
            ->setParameter('search', '%'.$search.'%');
        return $qb->getQuery()->getResult();
    }
    
    /**
     * Return all users with name skill like
     * @param type $skill
     * @return type
     */
    public function findSkill($skill)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('Application\UserBundle\Entity\User', 'u')
            ->join("u.profile", "p")
            ->join("p.skills", "s")
            ->where("s.name LIKE :skill")
            ->andwhere('u.roles LIKE :roles')
            ->andwhere('u.accept = :accept')
            ->setParameter('roles', '%"ROLE_CANDIDAT"%')
            ->setParameter("skill", "%".$skill."%")
            ->setParameter("accept", true);
        return $qb->getQuery()->getResult();
    }
    
    /**
     * Find all id
     * @return type
     */
    public function findAllById($ids) {
        if($ids==null){
            $ids=array();
            $ids[]=0;
        }
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
                ->from('Application\UserBundle\Entity\User', 'u')
                ->where($qb->expr()->in('u.id', $ids))
                ->orderBy('u.lastname')
                ;
        return $qb->getQuery()->getResult();
    }
    
    /**
     * Find all id
     * @return type
     */
    public function findAllByIdStatusContractFunction($es,$cs,$ss,$wfs) {
       
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
                ->from('Application\UserBundle\Entity\User', 'u')
                ->leftJoin("u.contract", "c")
                ->leftJoin("u.status", "s")
                ->leftJoin("u.workingFunction", "wf");
        if($es!=null){
            $qb->andWhere($qb->expr()->in('u.id', $es));
        }else{
            $qb->andWhere($qb->expr()->in('u.id', [0]));
        }
        if($cs!=null){
            $qb->andWhere($qb->expr()->in('c.id', $cs));
        }
        if($ss!=null){
            $qb->andWhere($qb->expr()->in('s.id', $ss));
        }
        if($wfs!=null){
            $qb->andWhere($qb->expr()->in('wf.id', $wfs));
        }
        
        $qb->orderBy('u.lastname');
        
        return $qb->getQuery()->getResult();
    }
    
    
}
